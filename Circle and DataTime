#pragma once
#include "1.h"
#include<iostream>

class Circle
{
		private:
				 double Radius, Ference, Area;
		
		public:

			Circle();     
			Circle(double);

			void SetRadius(double);
			double GetRadius() const;

			void SetFerence(double);
			double GetFerence() const;

			void SetArea(double);
			double GetArea() const;

			~Circle();
};

#include<iostream>
#include<conio.h>
#include "1.h"


int main() {

	Circle circle1(6378.1);

	Circle circle2;
	circle2.SetFerence(circle1.GetFerence() + 1);

	cout << "distinction " << circle2.GetRadius() - circle1.GetRadius() << endl;

	Circle circle3(3);
	Circle circle4(4);

	double doroga = (circle4.GetArea() - circle3.GetArea()) * 1000;
	double ograda = circle4.GetFerence() * 2000;
	double itogo = doroga + ograda;

		cout << "\n Price of walkway " << doroga << endl;
		cout << "Fence price " << ograda << endl;
		cout << "Price " << itogo << endl;

	
	_getch();
	return 0;
}
#include<iostream>
#include<conio.h>
#include "1.h"


using namespace std;

const double  Pi = 3.14;

//constructor
Circle::Circle()
{
     Radius = 1;
     Area = Pi;
	 Ference = 2 * Pi;
}


Circle::Circle(double x) 
{
    Radius = x;
    Ference = 2 * Pi * Radius;
    Area = Ference * Radius / 2;
}


void Circle::SetRadius(double x) 
{
    Radius = x;
    Ference = 2 * Pi * Radius;
    Area = Ference * Radius / 2;
}
double Circle::GetRadius() const 
{
    return Radius;
}


void Circle::SetFerence(double x) 
{
    Ference = x;
    Radius = Ference / (2 * Pi);
    Area = Ference*Radius / 2;
}
double Circle::GetFerence() const 
{
    return Ference;
}


void Circle::SetArea(double x) 
{
    Area = x;
    Radius = sqrt(Area / Pi);
    Ference = 2 * Pi * Radius;
}
double Circle::GetArea() const 
{
    return Area;
}


Circle::~Circle()
{

}

